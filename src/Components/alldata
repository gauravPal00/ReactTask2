// import React, { useEffect, useState } from 'react'
// import { useDispatch, useSelector } from 'react-redux'
// import { deleteHandler, modalHandler, userFetch, userFetch1, userFetch2, userFetch3 } from './Action'
// import Card from 'react-bootstrap/Card';
// import Col from 'react-bootstrap/Col';
// import Row from 'react-bootstrap/Row';
// import { Button, Container } from 'react-bootstrap';
// import { Pagination } from './Pagination';
// import { Dialog } from './Modal';
// import { useNavigate } from 'react-router-dom';
// import { Users } from './Users';


// export const AllPosts = () => {


//   const navigate = useNavigate()
//   const dispatch = useDispatch()

//   const User = useSelector((state) => state.FetchReducers.user)

//   useEffect(() => {
//       dispatch(userFetch1())
//   }, [User])

// const [data,setData] = useState([])

//   const list = useSelector((state) => state.FetchReducers.post)
//   const {userData} = useSelector((state)=>state.FetchReducers)
//   const {isOpenModal} = useSelector((state)=>state.FetchReducers)
//   const [currentPage, setCurrentPage] = useState(1)
//   const [postsPerPage, setPostsPerPage] = useState(10)

//   const lastPostIndex = currentPage * postsPerPage;
//   const firstPostIndex = lastPostIndex - postsPerPage
//   const currentPost = list.slice(firstPostIndex, lastPostIndex)

//   useEffect(() => {
//     dispatch(userFetch())
//     setData(currentPost)
//   }, [])

//   const style = {
//     margin: "10px 0"
//   }

//   const mainHandle = (id)=>{
//     dispatch(userFetch3(id))
//     dispatch(modalHandler(true))
//   }
//   const editHandle = (item)=>{
//     navigate("/addpost",{state:item})
//   }

//   const dropdownHandler = (e)=>{
//     dispatch(userFetch2(e.target.value))
//     setData(userData)
//   }

//   return (
//     <>
//       <Container>
//         <h1>ALL POST</h1>
//         <select style={style} onChange={dropdownHandler}>
//                 <option>Choose username</option>
//                 {
//                     User.map((item, index) => {
//                         return (
//                             <React.Fragment key={index} >
//                                 <option value={item.id}>{item.username}</option>
//                             </React.Fragment>
//                         )
//                     })
//                 }
//             </select>
//         <Row lg={3} sm={1} md={2} >
//           {
//             data ? 
//             data.map((item, index) => {
//               return (
//                 <React.Fragment key={index}> 
//                   <Col>
//                     <Card  style={style} >
//                       <Card.Body>
//                         <Card.Title>{item.id} : {item.title}</Card.Title>
//                         <Card.Text>
//                           {item.body}
//                         </Card.Text>
//                         <Button style={{marginRight:"5px"}} variant="danger" onClick={()=>{dispatch(deleteHandler(item.id))}}>DELETE</Button>
//                         <Button style={{marginRight:"5px"}}  onClick={()=>{mainHandle(item.id)}} variant="info">Comments</Button>
//                         <Button onClick={()=>{editHandle(item)}} variant='warning'>Edit</Button>
//                       </Card.Body>
//                     </Card>
//                   </Col>
//                 </React.Fragment>
//               )
//             })   :
//             data.map((item, index) => {
//               return (
//                 <React.Fragment key={index}> 
//                   <Col>
//                     <Card  style={style} >
//                       <Card.Body>
//                         <Card.Title>{item.id} : {item.title}</Card.Title>
//                         <Card.Text>
//                           {item.body}
//                         </Card.Text>
//                         <Button style={{marginRight:"5px"}} variant="danger" onClick={()=>{dispatch(deleteHandler(item.id))}}>DELETE</Button>
//                         <Button style={{marginRight:"5px"}}  onClick={()=>{mainHandle(item.id)}} variant="info">Comments</Button>
//                         <Button onClick={()=>{editHandle(item)}} variant='warning'>Edit</Button>
//                       </Card.Body>
//                     </Card>
//                   </Col>
//                 </React.Fragment>
//               )
//             })
//           }
//         </Row>
//         <Pagination totalPosts={list.length} postsPerPage={postsPerPage} setCurrentPage={setCurrentPage} />
        
//         <Dialog isOpenModal={isOpenModal}/>
//       </Container>
//     </>
//   )
// }

